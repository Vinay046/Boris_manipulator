// Generated by gencpp from file boris_manipulator/multiply.msg
// DO NOT EDIT!


#ifndef BORIS_MANIPULATOR_MESSAGE_MULTIPLY_H
#define BORIS_MANIPULATOR_MESSAGE_MULTIPLY_H

#include <ros/service_traits.h>


#include <boris_manipulator/multiplyRequest.h>
#include <boris_manipulator/multiplyResponse.h>


namespace boris_manipulator
{

struct multiply
{

typedef multiplyRequest Request;
typedef multiplyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct multiply
} // namespace boris_manipulator


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::boris_manipulator::multiply > {
  static const char* value()
  {
    return "a7d7d7065d45755acef7d4dcf908162a";
  }

  static const char* value(const ::boris_manipulator::multiply&) { return value(); }
};

template<>
struct DataType< ::boris_manipulator::multiply > {
  static const char* value()
  {
    return "boris_manipulator/multiply";
  }

  static const char* value(const ::boris_manipulator::multiply&) { return value(); }
};


// service_traits::MD5Sum< ::boris_manipulator::multiplyRequest> should match
// service_traits::MD5Sum< ::boris_manipulator::multiply >
template<>
struct MD5Sum< ::boris_manipulator::multiplyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::boris_manipulator::multiply >::value();
  }
  static const char* value(const ::boris_manipulator::multiplyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::boris_manipulator::multiplyRequest> should match
// service_traits::DataType< ::boris_manipulator::multiply >
template<>
struct DataType< ::boris_manipulator::multiplyRequest>
{
  static const char* value()
  {
    return DataType< ::boris_manipulator::multiply >::value();
  }
  static const char* value(const ::boris_manipulator::multiplyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::boris_manipulator::multiplyResponse> should match
// service_traits::MD5Sum< ::boris_manipulator::multiply >
template<>
struct MD5Sum< ::boris_manipulator::multiplyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::boris_manipulator::multiply >::value();
  }
  static const char* value(const ::boris_manipulator::multiplyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::boris_manipulator::multiplyResponse> should match
// service_traits::DataType< ::boris_manipulator::multiply >
template<>
struct DataType< ::boris_manipulator::multiplyResponse>
{
  static const char* value()
  {
    return DataType< ::boris_manipulator::multiply >::value();
  }
  static const char* value(const ::boris_manipulator::multiplyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BORIS_MANIPULATOR_MESSAGE_MULTIPLY_H
